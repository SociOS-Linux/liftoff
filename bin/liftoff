#!/bin/bash
set -e

# Target distribution
target_distro="$1"

# Target architectures
target_arch="$2"

# Load configuration
source /usr/lib/liftoff/liftoff.conf

pbuilderrc="/usr/lib/liftoff/pbuilderrc"

distro_to_codename() {
	echo "Determining distribution codename..."
	if [ "$target_distro" == "testing" ] ; then
		target_codename="$testing_codename"
	elif [ "$target_distro" == "unstable" ] ; then
		target_codename="$unstable_codename"
	elif [ "$target_distro" == "stable" ] ; then
		target_codename="$stable_codename"
	else
		target_codename="$target_distro"
	fi
	current_basetgz="/var/cache/liftoff/$target_codename-$target_arch-base.tgz"
	echo "Codename: $target_codename"
}

setup_log_output() {
	echo "Setting up log output..."
	mkdir -p "$log_dir"
	timestamp=$(date +%Y-%m-%d-%H:%M:%S)
	log_file="$log_dir/$timestamp-$target_codename-$target_arch.log"
	echo "$log_file"
}

create_pbuilder_environment() {
	echo "Creating pbuilder environment..."
	#rm $current_basetgz # in case it's zero-size file leftover from a failed build
	apt-key adv \
		--keyserver keyserver.ubuntu.com \
		--recv-keys "${keylist[@]}"
	DIST="$target_distro" ARCH="$target_arch" pbuilder create \
		--configfile "$pbuilderrc" \
		--debootstrapopts --keyring=/etc/apt/trusted.gpg \
		--http-proxy "$aptcacherng_server"
}

build_package() {
	echo "Building..."
	build_dir=$(mktemp -d build-result.XXX)
	setup_log_output
	DIST="$target_distro" ARCH="$target_arch" pdebuild \
		--buildresult "$build_dir" \
		--configfile "$pbuilderrc" \
		--logfile "$log_file"
}

upload_package() {
	echo "Uploading..."
	#freight-add -c /etc/freight.conf "$build_dir"/*.deb apt/"$target_codename"
	#freight-add -c /etc/freight.conf "$build_dir"/*.dsc "$build_dir"/*.tar.gz apt/"$target_codename"
	#freight-cache -c /etc/freight.conf
	scp "$build_dir"/* "$remote_user@$remote_server:$remote_repo_root/$target_codename"
}

cleanup() {
	echo "Cleaning up..."
	rm -rf "$build_dir"
}

trap cleanup EXIT INT TERM

# Convert target_distro to target_codename
distro_to_codename

# Create environment if it doesn't exist
if ( ! [ -e "$current_basetgz" ] || [ "$(stat --format=%s "$current_basetgz")" -eq 0 ] ); then
	create_pbuilder_environment
fi

build_package # Build

upload_package # Upload

echo "Finished."
